{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DT User\\\\Desktop\\\\vmra project\\\\vmra_frontend\\\\vmra-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// Importing necessary libraries\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [vms, setVms] = useState([]);\n  const [summary, setSummary] = useState({});\n  const [predictions, setPredictions] = useState([]);\n  const [simulation, setSimulation] = useState([]);\n\n  // Fetch VMs data\n  const fetchVms = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/vms');\n      setVms(response.data);\n    } catch (error) {\n      console.error('Error fetching VMs:', error);\n    }\n  };\n\n  // Fetch summary data\n  const fetchSummary = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/summary');\n      setSummary(response.data);\n    } catch (error) {\n      console.error('Error fetching summary:', error);\n    }\n  };\n\n  // Fetch predictions\n  const fetchPredictions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/predict');\n      setPredictions(response.data);\n    } catch (error) {\n      console.error('Error fetching predictions:', error);\n    }\n  };\n\n  // Allocate resources to a VM\n  const allocateResources = async (vmId, cpu, memory) => {\n    try {\n      await axios.post('http://localhost:5000/allocate', {\n        vm_id: vmId,\n        cpu: cpu,\n        memory: memory\n      });\n      fetchVms();\n    } catch (error) {\n      console.error('Error allocating resources:', error);\n    }\n  };\n\n  // Apply round-robin scheduling and simulate execution\n  const scheduleVms = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/schedule');\n      fetchVms();\n\n      // Initialize simulation state\n      const taskQueue = response.data.vms.map(vm => ({\n        ...vm,\n        remainingTasks: 5\n      }));\n      setSimulation(taskQueue);\n      const simulateExecution = () => {\n        let queueIndex = 0;\n        const interval = setInterval(() => {\n          setSimulation(prevSimulation => {\n            const updatedSimulation = [...prevSimulation];\n\n            // Process one VM at a time in round-robin order\n            const currentVM = updatedSimulation[queueIndex];\n            if (currentVM.remainingTasks > 0) {\n              currentVM.remainingTasks -= 1;\n              currentVM.cpu_usage = Math.max(currentVM.cpu_usage - 2, 0);\n              currentVM.memory_usage = Math.max(currentVM.memory_usage - 128, 0);\n              currentVM.status = currentVM.remainingTasks === 0 ? 'Completed' : 'Running';\n            }\n            queueIndex = (queueIndex + 1) % updatedSimulation.length;\n            return updatedSimulation;\n          });\n\n          // Check if all tasks are completed\n          const allCompleted = simulation.every(vm => vm.remainingTasks === 0);\n          if (allCompleted) {\n            clearInterval(interval);\n          }\n        }, 1000); // Execute every second\n      };\n      simulateExecution();\n    } catch (error) {\n      console.error('Error scheduling VMs:', error);\n    }\n  };\n  useEffect(() => {\n    fetchVms();\n    fetchSummary();\n    fetchPredictions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Virtual Machine Resource Allocator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total CPU Usage: \", summary.total_cpu_usage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Memory Usage: \", summary.total_memory_usage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"VM Count: \", summary.vm_count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vms\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Virtual Machines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"CPU Usage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Memory Usage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Remaining Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: simulation.map(vm => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: vm.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: vm.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: vm.cpu_usage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: vm.memory_usage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: vm.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: vm.remainingTasks\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => allocateResources(vm.id, vm.cpu_usage + 10, vm.memory_usage + 512),\n                disabled: vm.status === 'Completed',\n                children: \"Allocate Resources\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)]\n          }, vm.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"predictions\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Predictions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"VM ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Predicted CPU\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Predicted Memory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: predictions.map(prediction => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: prediction.vm_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: prediction.predicted_cpu\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: prediction.predicted_memory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, prediction.vm_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: scheduleVms,\n        children: \"Apply Round-Robin Scheduling\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4tKVzM9HP+ak2Kr3U83fq2T8JRg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","vms","setVms","summary","setSummary","predictions","setPredictions","simulation","setSimulation","fetchVms","response","get","data","error","console","fetchSummary","fetchPredictions","allocateResources","vmId","cpu","memory","post","vm_id","scheduleVms","taskQueue","map","vm","remainingTasks","simulateExecution","queueIndex","interval","setInterval","prevSimulation","updatedSimulation","currentVM","cpu_usage","Math","max","memory_usage","status","length","allCompleted","every","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","total_cpu_usage","total_memory_usage","vm_count","id","name","onClick","disabled","prediction","predicted_cpu","predicted_memory","_c","$RefreshReg$"],"sources":["C:/Users/DT User/Desktop/vmra project/vmra_frontend/vmra-frontend/src/App.js"],"sourcesContent":["// Importing necessary libraries\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [vms, setVms] = useState([]);\n  const [summary, setSummary] = useState({});\n  const [predictions, setPredictions] = useState([]);\n  const [simulation, setSimulation] = useState([]);\n\n  // Fetch VMs data\n  const fetchVms = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/vms');\n      setVms(response.data);\n    } catch (error) {\n      console.error('Error fetching VMs:', error);\n    }\n  };\n\n  // Fetch summary data\n  const fetchSummary = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/summary');\n      setSummary(response.data);\n    } catch (error) {\n      console.error('Error fetching summary:', error);\n    }\n  };\n\n  // Fetch predictions\n  const fetchPredictions = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/predict');\n      setPredictions(response.data);\n    } catch (error) {\n      console.error('Error fetching predictions:', error);\n    }\n  };\n\n  // Allocate resources to a VM\n  const allocateResources = async (vmId, cpu, memory) => {\n    try {\n      await axios.post('http://localhost:5000/allocate', {\n        vm_id: vmId,\n        cpu: cpu,\n        memory: memory,\n      });\n      fetchVms();\n    } catch (error) {\n      console.error('Error allocating resources:', error);\n    }\n  };\n\n  // Apply round-robin scheduling and simulate execution\n  const scheduleVms = async () => {\n    try {\n      const response = await axios.post('http://localhost:5000/schedule');\n      fetchVms();\n\n      // Initialize simulation state\n      const taskQueue = response.data.vms.map(vm => ({ ...vm, remainingTasks: 5 }));\n      setSimulation(taskQueue);\n\n      const simulateExecution = () => {\n        let queueIndex = 0;\n\n        const interval = setInterval(() => {\n          setSimulation(prevSimulation => {\n            const updatedSimulation = [...prevSimulation];\n\n            // Process one VM at a time in round-robin order\n            const currentVM = updatedSimulation[queueIndex];\n            if (currentVM.remainingTasks > 0) {\n              currentVM.remainingTasks -= 1;\n              currentVM.cpu_usage = Math.max(currentVM.cpu_usage - 2, 0);\n              currentVM.memory_usage = Math.max(currentVM.memory_usage - 128, 0);\n              currentVM.status = currentVM.remainingTasks === 0 ? 'Completed' : 'Running';\n            }\n\n            queueIndex = (queueIndex + 1) % updatedSimulation.length;\n\n            return updatedSimulation;\n          });\n\n          // Check if all tasks are completed\n          const allCompleted = simulation.every(vm => vm.remainingTasks === 0);\n          if (allCompleted) {\n            clearInterval(interval);\n          }\n        }, 1000); // Execute every second\n      };\n\n      simulateExecution();\n    } catch (error) {\n      console.error('Error scheduling VMs:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchVms();\n    fetchSummary();\n    fetchPredictions();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Virtual Machine Resource Allocator</h1>\n      <div className=\"summary\">\n        <h2>Summary</h2>\n        <p>Total CPU Usage: {summary.total_cpu_usage}</p>\n        <p>Total Memory Usage: {summary.total_memory_usage}</p>\n        <p>VM Count: {summary.vm_count}</p>\n      </div>\n\n      <div className=\"vms\">\n        <h2>Virtual Machines</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>CPU Usage</th>\n              <th>Memory Usage</th>\n              <th>Status</th>\n              <th>Remaining Tasks</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {simulation.map(vm => (\n              <tr key={vm.id}>\n                <td>{vm.id}</td>\n                <td>{vm.name}</td>\n                <td>{vm.cpu_usage}</td>\n                <td>{vm.memory_usage}</td>\n                <td>{vm.status}</td>\n                <td>{vm.remainingTasks}</td>\n                <td>\n                  <button\n                    onClick={() => allocateResources(vm.id, vm.cpu_usage + 10, vm.memory_usage + 512)}\n                    disabled={vm.status === 'Completed'}\n                  >\n                    Allocate Resources\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"predictions\">\n        <h2>Predictions</h2>\n        <table>\n          <thead>\n            <tr>\n              <th>VM ID</th>\n              <th>Predicted CPU</th>\n              <th>Predicted Memory</th>\n            </tr>\n          </thead>\n          <tbody>\n            {predictions.map(prediction => (\n              <tr key={prediction.vm_id}>\n                <td>{prediction.vm_id}</td>\n                <td>{prediction.predicted_cpu}</td>\n                <td>{prediction.predicted_memory}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"actions\">\n        <button onClick={scheduleVms}>Apply Round-Robin Scheduling</button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}